{"version":3,"sources":["Image/aboutreact.png","Screen/SplashScreen.js","Screen/Components/Loader.js","Screen/LoginScreen.js","Screen/RegisterScreen.js","Screen/DrawerScreens/HomeScreen.js","Screen/DrawerScreens/SettingScreen.js","Screen/Components/CustomSidebarMenu.js","Screen/Components/NavigationDrawerHeader.js","Screen/DrawerNavigationRoutes.js","App.js","Image/success.png"],"names":["module","exports","SplashScreen","navigation","useState","animating","setAnimating","useEffect","setTimeout","AsyncStorage","getItem","then","value","replace","View","style","styles","container","Image","source","require","width","resizeMode","margin","ActivityIndicator","color","size","activityIndicator","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","height","Loader","props","loading","Modal","transparent","animationType","visible","onRequestClose","console","log","modalBackground","activityIndicatorWrapper","flexDirection","borderRadius","display","LoginScreen","userEmail","setUserEmail","userPassword","setUserPassword","setLoading","errortext","setErrortext","passwordInputRef","createRef","mainBody","ScrollView","keyboardShouldPersistTaps","contentContainerStyle","alignContent","KeyboardAvoidingView","enabled","SectionStyle","TextInput","inputStyle","onChangeText","UserEmail","placeholder","placeholderTextColor","autoCapitalize","keyboardType","returnKeyType","onSubmitEditing","current","focus","underlineColorAndroid","blurOnSubmit","UserPassword","ref","Keyboard","dismiss","secureTextEntry","Text","errorTextStyle","TouchableOpacity","buttonStyle","activeOpacity","onPress","dataToSend","user_email","user_password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","fetch","method","body","headers","response","json","responseJson","status","setItem","data","user_id","catch","error","alert","buttonTextStyle","registerTextStyle","navigate","marginTop","marginLeft","marginRight","borderWidth","borderColor","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","fontWeight","alignSelf","padding","RegisterScreen","userName","setUserName","userAge","setUserAge","userAddress","setUserAddress","isRegistraionSuccess","setIsRegistraionSuccess","emailInputRef","ageInputRef","addressInputRef","successTextStyle","UserName","UserAge","UserAddress","user_name","user_age","user_address","HomeScreen","SafeAreaView","SettingsScreen","CustomSidebarMenu","stylesSidebar","sideMenuContainer","profileHeader","profileHeaderPicCircle","charAt","profileHeaderText","profileHeaderLine","DrawerContentScrollView","DrawerItemList","DrawerItem","label","toggleDrawer","Alert","text","clear","cancelable","paddingTop","paddingHorizontal","marginHorizontal","NavigationDrawerHeader","navigationProps","uri","Stack","createStackNavigator","Drawer","createDrawerNavigator","homeScreenStack","Navigator","initialRouteName","Screen","name","component","options","title","headerLeft","headerStyle","headerTintColor","headerTitleStyle","settingScreenStack","screenOptions","DrawerNavigatorRoutes","drawerContentOptions","activeTintColor","itemStyle","marginVertical","labelStyle","headerShown","drawerContent","drawerLabel","Auth","App","NavigationContainer","DrawerNavigationRoutes"],"mappings":"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","file":"static/js/app.d62365d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aboutreact.27278825.png\";","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React, {useState, useEffect} from 'react';\nimport {ActivityIndicator, View, StyleSheet, Image} from 'react-native';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst SplashScreen = ({navigation}) => {\n  //State for ActivityIndicator animation\n  const [animating, setAnimating] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setAnimating(false);\n      //Check if user_id is set or not\n      //If not then send for Authentication\n      //else send to Home Screen\n      AsyncStorage.getItem('user_id').then((value) =>\n        navigation.replace(value === null ? 'Auth' : 'DrawerNavigationRoutes'),\n      );\n    }, 5000);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('../Image/aboutreact.png')}\n        style={{width: '90%', resizeMode: 'contain', margin: 30}}\n      />\n      <ActivityIndicator\n        animating={animating}\n        color=\"#FFFFFF\"\n        size=\"large\"\n        style={styles.activityIndicator}\n      />\n    </View>\n  );\n};\n\nexport default SplashScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#252138',\n  },\n  activityIndicator: {\n    alignItems: 'center',\n    height: 80,\n  },\n});\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React from 'react';\nimport {StyleSheet, View, Modal, ActivityIndicator} from 'react-native';\n\nconst Loader = (props) => {\n  const {loading, ...attributes} = props;\n\n  return (\n    <Modal\n      transparent={true}\n      animationType={'none'}\n      visible={loading}\n      onRequestClose={() => {\n        console.log('close modal');\n      }}>\n      <View style={styles.modalBackground}>\n        <View style={styles.activityIndicatorWrapper}>\n          <ActivityIndicator\n            animating={true}\n            color=\"#000000\"\n            size=\"large\"\n            style={styles.activityIndicator}\n          />\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nexport default Loader;\n\nconst styles = StyleSheet.create({\n  modalBackground: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    backgroundColor: '#00000040',\n  },\n  activityIndicatorWrapper: {\n    backgroundColor: '#FFFFFF',\n    height: 100,\n    width: 100,\n    borderRadius: 10,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  activityIndicator: {\n    alignItems: 'center',\n    height: 80,\n  },\n});\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React, {useState, createRef} from 'react';\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  Text,\n  ScrollView,\n  Image,\n  Keyboard,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n} from 'react-native';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport Loader from './Components/Loader';\n\nconst LoginScreen = ({navigation}) => {\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errortext, setErrortext] = useState('');\n\n  const passwordInputRef = createRef();\n\n  const handleSubmitPress = () => {\n    setErrortext('');\n    if (!userEmail) {\n      alert('Please fill Email');\n      return;\n    }\n    if (!userPassword) {\n      alert('Please fill Password');\n      return;\n    }\n    setLoading(true);\n    let dataToSend = {user_email: userEmail, user_password: userPassword};\n    let formBody = [];\n    for (let key in dataToSend) {\n      let encodedKey = encodeURIComponent(key);\n      let encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n    formBody = formBody.join('&');\n\n    fetch('http://192.168.1.14:3000/api/user/login', {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        //Header Defination\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n      },\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        //Hide Loader\n        setLoading(false);\n        console.log(responseJson);\n        // If server response message same as Data Matched\n        if (responseJson.status == 1) {\n          AsyncStorage.setItem('user_id', responseJson.data[0].user_id);\n          console.log(responseJson.data[0].user_id);\n          navigation.replace('DrawerNavigationRoutes');\n        } else {\n          setErrortext('Please check your email id or password');\n          console.log('Please check your email id or password');\n        }\n      })\n      .catch((error) => {\n        //Hide Loader\n        setLoading(false);\n        console.error(error);\n      });\n  };\n\n  return (\n    <View style={styles.mainBody}>\n      <Loader loading={loading} />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        contentContainerStyle={{\n          flex: 1,\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}>\n        <View>\n          <KeyboardAvoidingView enabled>\n            <View style={{alignItems: 'center'}}>\n              <Image\n                source={require('../Image/aboutreact.png')}\n                style={{\n                  width: '50%',\n                  height: 100,\n                  resizeMode: 'contain',\n                  margin: 30,\n                }}\n              />\n            </View>\n            <View style={styles.SectionStyle}>\n              <TextInput\n                style={styles.inputStyle}\n                onChangeText={(UserEmail) => setUserEmail(UserEmail)}\n                placeholder=\"Enter Email\" //dummy@abc.com\n                placeholderTextColor=\"#8b9cb5\"\n                autoCapitalize=\"none\"\n                keyboardType=\"email-address\"\n                returnKeyType=\"next\"\n                onSubmitEditing={() =>\n                  passwordInputRef.current && passwordInputRef.current.focus()\n                }\n                underlineColorAndroid=\"#f000\"\n                blurOnSubmit={false}\n              />\n            </View>\n            <View style={styles.SectionStyle}>\n              <TextInput\n                style={styles.inputStyle}\n                onChangeText={(UserPassword) => setUserPassword(UserPassword)}\n                placeholder=\"Enter Password\" //12345\n                placeholderTextColor=\"#8b9cb5\"\n                keyboardType=\"default\"\n                ref={passwordInputRef}\n                onSubmitEditing={Keyboard.dismiss}\n                blurOnSubmit={false}\n                secureTextEntry={true}\n                underlineColorAndroid=\"#f000\"\n                returnKeyType=\"next\"\n              />\n            </View>\n            {errortext != '' ? (\n              <Text style={styles.errorTextStyle}> {errortext} </Text>\n            ) : null}\n            <TouchableOpacity\n              style={styles.buttonStyle}\n              activeOpacity={0.5}\n              onPress={handleSubmitPress}>\n              <Text style={styles.buttonTextStyle}>LOGIN</Text>\n            </TouchableOpacity>\n            <Text\n              style={styles.registerTextStyle}\n              onPress={() => navigation.navigate('RegisterScreen')}>\n              New Here ? Register\n            </Text>\n          </KeyboardAvoidingView>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  mainBody: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#252138',\n    alignContent: 'center',\n  },\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 25,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  registerTextStyle: {\n    color: '#FFFFFF',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 14,\n    alignSelf: 'center',\n    padding: 10,\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n});\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React, {useState, createRef} from 'react';\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  Text,\n  Image,\n  KeyboardAvoidingView,\n  Keyboard,\n  TouchableOpacity,\n  ScrollView,\n} from 'react-native';\n\nimport Loader from './Components/Loader';\n\nconst RegisterScreen = (props) => {\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userAge, setUserAge] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errortext, setErrortext] = useState('');\n  const [isRegistraionSuccess, setIsRegistraionSuccess] = useState(false);\n\n  const nameInputRef = createRef();\n  const emailInputRef = createRef();\n  const ageInputRef = createRef();\n  const addressInputRef = createRef();\n\n  const handleSubmitButton = () => {\n    setErrortext('');\n    if (!userName) {\n      alert('Please fill Name');\n      return;\n    }\n    if (!userEmail) {\n      alert('Please fill Email');\n      return;\n    }\n    if (!userAge) {\n      alert('Please fill Age');\n      return;\n    }\n    if (!userAddress) {\n      alert('Please fill Address');\n      return;\n    }\n    //Show Loader\n    setLoading(true);\n    var dataToSend = {\n      user_name: userName,\n      user_email: userEmail,\n      user_age: userAge,\n      user_address: userAddress,\n    };\n    var formBody = [];\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n    formBody = formBody.join('&');\n\n    fetch('http://192.168.1.14:3000/api/user/register', {\n      method: 'POST',\n      body: formBody,\n      headers: {\n        //Header Defination\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n      },\n    })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        //Hide Loader\n        setLoading(false);\n        console.log(responseJson);\n        // If server response message same as Data Matched\n        if (responseJson.status == 1) {\n          setIsRegistraionSuccess(true);\n          console.log('Registration Successful. Please Login to proceed');\n        } else {\n          setErrortext('Registration Unsuccessful');\n        }\n      })\n      .catch((error) => {\n        //Hide Loader\n        setLoading(false);\n        console.error(error);\n      });\n  };\n  if (isRegistraionSuccess) {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: '#252138',\n          justifyContent: 'center',\n        }}>\n        <Image\n          source={require('../Image/success.png')}\n          style={{height: 150, resizeMode: 'contain', alignSelf: 'center'}}\n        />\n        <Text style={styles.successTextStyle}>Registration Successful.</Text>\n        <TouchableOpacity\n          style={styles.buttonStyle}\n          activeOpacity={0.5}\n          onPress={() => props.navigation.navigate('LoginScreen')}>\n          <Text style={styles.buttonTextStyle}>Login Now</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n  return (\n    <View style={{flex: 1, backgroundColor: '#252138'}}>\n      <Loader loading={loading} />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        contentContainerStyle={{\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}>\n        <View style={{alignItems: 'center'}}>\n          <Image\n            source={require('../Image/aboutreact.png')}\n            style={{\n              width: '50%',\n              height: 100,\n              resizeMode: 'contain',\n              margin: 30,\n            }}\n          />\n        </View>\n        <KeyboardAvoidingView enabled>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserName) => setUserName(UserName)}\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Name\"\n              placeholderTextColor=\"#8b9cb5\"\n              autoCapitalize=\"sentences\"\n              returnKeyType=\"next\"\n              onSubmitEditing={() =>\n                emailInputRef.current && emailInputRef.current.focus()\n              }\n              blurOnSubmit={false}\n            />\n          </View>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserEmail) => setUserEmail(UserEmail)}\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Email\"\n              placeholderTextColor=\"#8b9cb5\"\n              keyboardType=\"email-address\"\n              ref={emailInputRef}\n              returnKeyType=\"next\"\n              onSubmitEditing={() =>\n                ageInputRef.current && ageInputRef.current.focus()\n              }\n              blurOnSubmit={false}\n            />\n          </View>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserAge) => setUserAge(UserAge)}\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Age\"\n              placeholderTextColor=\"#8b9cb5\"\n              keyboardType=\"numeric\"\n              ref={ageInputRef}\n              returnKeyType=\"next\"\n              onSubmitEditing={() =>\n                addressInputRef.current && addressInputRef.current.focus()\n              }\n              blurOnSubmit={false}\n            />\n          </View>\n          <View style={styles.SectionStyle}>\n            <TextInput\n              style={styles.inputStyle}\n              onChangeText={(UserAddress) => setUserAddress(UserAddress)}\n              underlineColorAndroid=\"#f000\"\n              placeholder=\"Enter Address\"\n              placeholderTextColor=\"#8b9cb5\"\n              autoCapitalize=\"sentences\"\n              ref={addressInputRef}\n              returnKeyType=\"next\"\n              onSubmitEditing={Keyboard.dismiss}\n              blurOnSubmit={false}\n            />\n          </View>\n          {errortext != '' ? (\n            <Text style={styles.errorTextStyle}> {errortext} </Text>\n          ) : null}\n          <TouchableOpacity\n            style={styles.buttonStyle}\n            activeOpacity={0.5}\n            onPress={handleSubmitButton}>\n            <Text style={styles.buttonTextStyle}>REGISTER</Text>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </View>\n  );\n};\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n});\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React from 'react';\nimport {View, Text, SafeAreaView} from 'react-native';\n\nconst HomeScreen = () => {\n  return (\n    <SafeAreaView style={{flex: 1}}>\n      <View style={{flex: 1, padding: 16}}>\n        <View\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <Text\n            style={{\n              fontSize: 20,\n              textAlign: 'center',\n              marginBottom: 16,\n            }}>\n            Example of Splash, Login and Sign Up in React Native\n            {'\\n\\n'}\n            This is the Home Screen\n          </Text>\n        </View>\n        <Text\n          style={{\n            fontSize: 18,\n            textAlign: 'center',\n            color: 'grey',\n          }}>\n          Splash, Login and Register Example{'\\n'}React Native\n        </Text>\n        <Text\n          style={{\n            fontSize: 16,\n            textAlign: 'center',\n            color: 'grey',\n          }}>\n          www.aboutreact.com\n        </Text>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React from 'react';\nimport {View, Text, SafeAreaView} from 'react-native';\n\nconst SettingsScreen = () => {\n  return (\n    <SafeAreaView style={{flex: 1}}>\n      <View style={{flex: 1, padding: 16}}>\n        <View\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <Text\n            style={{\n              fontSize: 20,\n              textAlign: 'center',\n              marginBottom: 16,\n            }}>\n            Example of Splash, Login and Sign Up in React Native\n            {'\\n\\n'}\n            This is the Settings Screen\n          </Text>\n        </View>\n        <Text\n          style={{\n            fontSize: 18,\n            textAlign: 'center',\n            color: 'grey',\n          }}>\n          Splash, Login and Register Example{'\\n'}React Native\n        </Text>\n        <Text\n          style={{\n            fontSize: 16,\n            textAlign: 'center',\n            color: 'grey',\n          }}>\n          www.aboutreact.com\n        </Text>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default SettingsScreen;\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React from 'react';\nimport {View, Text, Alert, StyleSheet} from 'react-native';\n\nimport {\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst CustomSidebarMenu = (props) => {\n  return (\n    <View style={stylesSidebar.sideMenuContainer}>\n      <View style={stylesSidebar.profileHeader}>\n        <View style={stylesSidebar.profileHeaderPicCircle}>\n          <Text style={{fontSize: 25, color: '#252138'}}>\n            {'About React'.charAt(0)}\n          </Text>\n        </View>\n        <Text style={stylesSidebar.profileHeaderText}>AboutReact</Text>\n      </View>\n      <View style={stylesSidebar.profileHeaderLine} />\n\n      <DrawerContentScrollView {...props}>\n        <DrawerItemList {...props} />\n        <DrawerItem\n          label={({color}) => <Text style={{color: '#d8d8d8'}}>Logout</Text>}\n          onPress={() => {\n            props.navigation.toggleDrawer();\n            Alert.alert(\n              'Logout',\n              'Are you sure? You want to logout?',\n              [\n                {\n                  text: 'Cancel',\n                  onPress: () => {\n                    return null;\n                  },\n                },\n                {\n                  text: 'Confirm',\n                  onPress: () => {\n                    AsyncStorage.clear();\n                    props.navigation.replace('Auth');\n                  },\n                },\n              ],\n              {cancelable: false},\n            );\n          }}\n        />\n      </DrawerContentScrollView>\n    </View>\n  );\n};\n\nexport default CustomSidebarMenu;\n\nconst stylesSidebar = StyleSheet.create({\n  sideMenuContainer: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#252138',\n    paddingTop: 40,\n    color: 'white',\n  },\n  profileHeader: {\n    flexDirection: 'row',\n    backgroundColor: '#252138',\n    padding: 15,\n    textAlign: 'center',\n  },\n  profileHeaderPicCircle: {\n    width: 60,\n    height: 60,\n    borderRadius: 60 / 2,\n    color: 'white',\n    backgroundColor: '#ffffff',\n    textAlign: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  profileHeaderText: {\n    color: 'white',\n    alignSelf: 'center',\n    paddingHorizontal: 10,\n    fontWeight: 'bold',\n  },\n  profileHeaderLine: {\n    height: 1,\n    marginHorizontal: 20,\n    backgroundColor: '#e2e2e2',\n    marginTop: 15,\n  },\n});\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React and Component\nimport React from 'react';\nimport {View, Image, TouchableOpacity} from 'react-native';\n\nconst NavigationDrawerHeader = (props) => {\n  const toggleDrawer = () => {\n    props.navigationProps.toggleDrawer();\n  };\n\n  return (\n    <View style={{flexDirection: 'row'}}>\n      <TouchableOpacity onPress={toggleDrawer}>\n        <Image\n          source={{\n            uri:\n              'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png',\n          }}\n          style={{width: 25, height: 25, marginLeft: 5}}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\nexport default NavigationDrawerHeader;\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\n\n// Import React\nimport React from 'react';\n\n// Import Navigators from React Navigation\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\n\n// Import Screens\nimport HomeScreen from './DrawerScreens/HomeScreen';\nimport SettingsScreen from './DrawerScreens/SettingScreen';\nimport CustomSidebarMenu from './Components/CustomSidebarMenu';\nimport NavigationDrawerHeader from './Components/NavigationDrawerHeader';\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst homeScreenStack = ({navigation}) => {\n  return (\n    <Stack.Navigator initialRouteName=\"HomeScreen\">\n      <Stack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{\n          title: 'Home', //Set Header Title\n          headerLeft: () => (\n            <NavigationDrawerHeader navigationProps={navigation} />\n          ),\n          headerStyle: {\n            backgroundColor: '#252138', //Set Header color\n          },\n          headerTintColor: '#fff', //Set Header text color\n          headerTitleStyle: {\n            fontWeight: 'bold', //Set Header text style\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst settingScreenStack = ({navigation}) => {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"SettingsScreen\"\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerHeader navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: '#252138', //Set Header color\n        },\n        headerTintColor: '#fff', //Set Header text color\n        headerTitleStyle: {\n          fontWeight: 'bold', //Set Header text style\n        },\n      }}>\n      <Stack.Screen\n        name=\"SettingsScreen\"\n        component={SettingsScreen}\n        options={{\n          title: 'Settings', //Set Header Title\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst DrawerNavigatorRoutes = (props) => {\n  return (\n    <Drawer.Navigator\n      drawerContentOptions={{\n        activeTintColor: '#cee1f2',\n        color: '#cee1f2',\n        itemStyle: {marginVertical: 5, color: 'white'},\n        labelStyle: {\n          color: '#d8d8d8',\n        },\n      }}\n      screenOptions={{headerShown: false}}\n      drawerContent={CustomSidebarMenu}>\n      <Drawer.Screen\n        name=\"homeScreenStack\"\n        options={{drawerLabel: 'Home Screen'}}\n        component={homeScreenStack}\n      />\n      <Drawer.Screen\n        name=\"settingScreenStack\"\n        options={{drawerLabel: 'Setting Screen'}}\n        component={settingScreenStack}\n      />\n    </Drawer.Navigator>\n  );\n};\n\nexport default DrawerNavigatorRoutes;\n","// Example of Splash, Login and Sign Up in React Native\n// https://aboutreact.com/react-native-login-and-signup/\nimport 'react-native-gesture-handler';\n\n// Import React and Component\nimport React from 'react';\n\n// Import Navigators from React Navigation\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\n\n// Import Screens\nimport SplashScreen from './Screen/SplashScreen';\nimport LoginScreen from './Screen/LoginScreen';\nimport RegisterScreen from './Screen/RegisterScreen';\nimport DrawerNavigationRoutes from './Screen/DrawerNavigationRoutes';\n\nconst Stack = createStackNavigator();\n\nconst Auth = () => {\n  // Stack Navigator for Login and Sign up Screen\n  return (\n    <Stack.Navigator initialRouteName=\"LoginScreen\">\n      <Stack.Screen\n        name=\"LoginScreen\"\n        component={LoginScreen}\n        options={{headerShown: false}}\n      />\n      <Stack.Screen\n        name=\"RegisterScreen\"\n        component={RegisterScreen}\n        options={{\n          title: 'Register', //Set Header Title\n          headerStyle: {\n            backgroundColor: '#252138', //Set Header color\n          },\n          headerTintColor: '#fff', //Set Header text color\n          headerTitleStyle: {\n            fontWeight: 'bold', //Set Header text style\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\n/* Switch Navigator for those screens which needs to be switched only once\n  and we don't want to switch back once we switch from them to the next one */\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"SplashScreen\">\n        {/* SplashScreen which will come once for 5 Seconds */}\n        <Stack.Screen\n          name=\"SplashScreen\"\n          component={SplashScreen}\n          // Hiding header for Splash Screen\n          options={{headerShown: false}}\n        />\n        {/* Auth Navigator which includer Login Signup will come once */}\n        <Stack.Screen\n          name=\"Auth\"\n          component={Auth}\n          options={{headerShown: false}}\n        />\n        {/* Navigation Drawer as a landing page */}\n        <Stack.Screen\n          name=\"DrawerNavigationRoutes\"\n          component={DrawerNavigationRoutes}\n          // Hiding header for Navigation Drawer as we will use our custom header\n          options={{headerShown: false}}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/success.f408014c.png\";"],"sourceRoot":""}